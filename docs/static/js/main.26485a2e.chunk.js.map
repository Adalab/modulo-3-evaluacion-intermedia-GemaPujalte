{"version":3,"sources":["components/Pokemon.js","components/PokeList.js","components/App.js","reportWebVitals.js","index.js"],"names":["Pokemon","props","items","card","types","map","type","index","src","url","alt","name","PokeList","this","pokemons","id","className","title","console","log","React","Component","App","state","data","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"yPAwBeA,G,MArBC,SAACC,GACf,IAAMC,EAAQD,EAAME,KAAKC,MAAMC,KAAI,SAACC,EAAMC,GACxC,OAAO,6BAAiBD,GAARC,MAGlB,OACE,oCACE,qBAAKC,IAAKP,EAAME,KAAKM,IAAKC,IAAKT,EAAME,KAAKQ,OAC1C,6BAAKV,EAAME,KAAKQ,OAChB,6BAAKT,SCeIU,E,uKArBX,IAAMV,EAAQW,KAAKZ,MAAMa,SAAST,KAAI,SAACF,EAAMI,GAC3C,OACE,oBAAkBQ,GAAIR,EAAOS,UAAU,OAAOC,MAAOd,EAAKQ,KAA1D,SACE,cAAC,EAAD,CAASR,KAAMA,KADRA,EAAKY,OAMlB,OADAG,QAAQC,IAAIjB,GAEV,8BACE,oBAAIc,UAAU,QAAd,SAAuBd,U,GAZRkB,IAAMC,W,OCqBdC,E,kDAnBb,WAAYrB,GAAQ,IAAD,8BACjB,cAAMA,IACDsB,MAAQ,CACXT,SAAUU,GAHK,E,qDAQjB,OACE,sBAAKR,UAAU,MAAf,UACE,iCACE,oBAAIA,UAAU,QAAd,4BAEF,cAAC,EAAD,CAAUF,SAAUD,KAAKU,MAAMT,kB,GAdrBM,IAAMC,WCOTI,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K","file":"static/js/main.26485a2e.chunk.js","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst Pokemon = (props) => {\n  const items = props.card.types.map((type, index) => {\n    return <li key={index}>{type}</li>;\n  });\n\n  return (\n    <article>\n      <img src={props.card.url} alt={props.card.name} />\n      <h2>{props.card.name}</h2>\n      <ul>{items}</ul>\n    </article>\n  );\n};\n\nPokemon.propTypes = {\n  url: PropTypes.string,\n  alt: PropTypes.string,\n  name: PropTypes.string,\n  items: PropTypes.array,\n};\n\nexport default Pokemon;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport Pokemon from \"./Pokemon\";\n\nclass PokeList extends React.Component {\n  render() {\n    const items = this.props.pokemons.map((card, index) => {\n      return (\n        <li key={card.id} id={index} className=\"card\" title={card.name}>\n          <Pokemon card={card} />\n        </li>\n      );\n    });\n    console.log(items);\n    return (\n      <div>\n        <ul className=\"cards\">{items}</ul>\n      </div>\n    );\n  }\n}\n\nPokeList.propTypes = {\n  name: PropTypes.string,\n  items: PropTypes.array,\n};\n\nexport default PokeList;\n","import React from \"react\";\nimport \"../stylesheets/App.scss\";\nimport PokeList from \"./PokeList\";\nimport data from \"../data/pokemons.json\";\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      pokemons: data,\n    };\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <header>\n          <h1 className=\"title\">Pokemon List</h1>\n        </header>\n        <PokeList pokemons={this.state.pokemons} />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./components/App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}